--------------------
# SQL
--------------------

Q1:あなたはECの会社で働いています。顧客には２つの種類（プレミアムと無料会員）がありどちらも商品を購入することができます。
 You are working for an EC company. There are two customer status (premium and free), and both can buy products.


orders
+----------+-------------+---------------------+------+----------+
| order_id | order_date  | ordered_customer_id | item | quantity |
+----------+-------------+---------------------+------+----------+
|        1 | 2020-02-13  |                 114 |    a |        2 |
|        2 | 2020-03-01  |                 115 |    b |        1 |
|        3 | 2020-06-01  |                 116 |    c |        1 |
|        4 | 2020-03-01  |                 120 |    d |        6 |
|        5 | 2020-10-01  |                 120 |    e |        3 |
|        6 | 2020-03-01  |                 321 |    f |       10 |

premium_customers
+-------------+
| customer_id |
+-------------+
|         114 |
|         116 |
|         120 |
|         221 |

総購入数を発注日、プレミアム顧客か否かで集計するSQLを書いてください。
Please write an SQL query to get total quantity by order_date and is_premium_customer (if the customer was premium customer) like below.

+------------+---------------------+----------+
| order_date | is_premium_customer | quantity |
+------------+---------------------+----------+ 
| 2020-01-01 | Y                   |      100 |
| 2020-01-01 | N                   |       50 |
| 2020-01-02 | Y                   |      120 |
| 2020-01-02 | N                   |       60 |

=================================
select order_date 
, case when ordered_customer_id in (select distinct customer_id from premium_customers) then "Y" else "N" as is_premium_customer 
, sum (quantity) as quantity
from orders
group by  order_date, is_premium_customer
order by 1,2



Q2:　先述のプレミアム顧客のテーブルとは別にプレミアム顧客の履歴のテーブルがあります。一人の顧客はプレミアム・無料の切り替えによって複数の記録を持つことがあります。（例; customer_id = 120)
Now instead of premium_customers table, there is premium_customer_histories table. One customer has multiple records if the customer switches between premium and free multiple times. (e.g. customer_id = 120 in below sample)

orders
+-------------+-------------+-----------------------+------+----------+
| order_id    | order_date  | ordered_customer_id   | item | quantity |
+-------------+-------------+-----------------------+------+----------+
|           1 | 2020-02-13  |                   114 |    a |        2 |
|           2 | 2020-03-01  |                   115 |    b |        1 |
|           3 | 2020-06-01  |                   116 |    c |        1 |
|           4 | 2020-03-01  |                   120 |    d |        6 |
|           5 | 2020-10-01  |                   120 |    e |        3 |
|           6 | 2020-03-01  |                   321 |    f |       10 |

premium_customer_histories
+-------------+--------------------+------------------+
| customer_id | premium_start_date | premium_end_date |
+-------------+--------------------+------------------+
|         114 | 2020-01-01         | 2020-06-30       |
|         116 | 2020-01-15         | 2020-02-14       |
|         120 | 2020-02-15         | 2020-04-14       |
|         120 | 2020-05-01         | 2020-05-31       |
|         221 | 2020-06-10         | 2020-12-09       |


総購入数を発注日、プレミアムカスタマーか否かで集計するSQLを書いてください。
Please write an SQL query to get total quantity by order_date and is_premium_customer (if the customer was premium customer as of the order).

+------------+---------------------+----------+
| order_date | is_premium_customer | quantity |
+------------+---------------------+----------+ 
| 2020-01-01 | Y                   |      100 |
| 2020-01-01 | N                   |       50 |
| 2020-01-02 | Y                   |      120 |
| 2020-01-02 | N                   |       60 |

=================================
with premium_list as (
select distinct t1.order_date
,t1.ordered_customer_id
,case when t1.order_date between t2.premium_start_date and  t2.premium_end_date then "Y" eles "N" as flag
from orders  t1
inner join premium_customer_histories t2
on t1.ordered_customer_id = t2.customer_id
where flag ="Y"
)
select t3.order_date 
,case when flag = "Y" then "Y" eles "N" as is_premium_customer 
,sum(t3.quantity) as quantity
from orders t3
left outer join premium_list t4
on t3.order_date = t4.order_date 
and t3.ordered_customer_id = t4.ordered_customer_id
group by 1,2
order by 1,2

Q3: 実務の中で、SQLの実行結果が正しいことを検証する方法を挙げてください。
List as many ways as you can think of to verify that the SQL execution results are correct.
＊既存公式数字帳票と照合する
＊ほかのメンバーとダブルチェック


Q4: SQLを書く際に、正しいデータを出す以外に気を付けていることはありますか？
When writing SQL, is there anything else you take care of besides extracting accurate data?
＊ほかの人が見てもわかるような書き方（コーディングルールがあれば、それに従うこと）
＊クエリーの時間を如何に短くする
＊できるだけ複雑なコードを書かないようにする


Q5: 読みやすいSQLを書くことは重要ですが、読みやすいSQLにするための具体的なポイントをいくつか挙げてください。
It is important to write SQL that is easy for others to understand. Please list some specific points to make your SQL easy to read.
＊コメントアウトを付け加える
＊ニューテーブル、カラムなどのネーミングを一定のルールのもとに行う
＊適宜に行分けをする


Q6: SQLの実行に時間がかかりすぎる場合に、どのような確認・対応をしますか？いくつか挙げてください。
What do you check or do when SQL runs and result extraction take too long? Please list several.
＊クエリーをいくつのパーツを分けして、時間がかかる箇所や原因を特定する
＊条件を細かく絞って複数を分けて実行する
＊無駄なカラムを削り落とす


Q7 実務の中で、リレーショナルデータベースのデータを分析する際に、SQLと表計算ソフト（Excel）だけで行うか、PythonやRを組み合わせるか、どのように判断しますか？
When analyzing data from a relational database, how do you decide whether to use only SQL and spreadsheet software (Excel) or a combination of Python and R?
＊今後にルーチンワークになりそうな分析、Excelで扱えないレベルのデータ量、高度な統計分析アルゴリズムの構築が必要な分析はpython やRで組み合わせる（BIツールも可）
＊それ以外はSQL、Excelだけ行う。特に、相手へ見せて説明する際には、一般的なデータリテラシーを考慮して、Excelが妥当かと思います。
